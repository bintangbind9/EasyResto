// <auto-generated />
using System;
using EasyResto.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EasyResto.Infrastructure.Migrations
{
    [DbContext(typeof(EasyRestoDbContext))]
    partial class EasyRestoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EasyResto.Domain.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("AppUser", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a8d1173d-9a5f-4f82-8813-92e6839294a6"),
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            IsActive = true,
                            Name = "Admin",
                            Password = "AQAAAAIAAYagAAAAEKfBzOzKhLbtqTO8uB0DmX/NFmMl02PKZzKnIIezbbrjzZvZy9P6jNskLvAB75JHeA==",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.AppUserRole", b =>
                {
                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AppUserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AppUserRole", (string)null);

                    b.HasData(
                        new
                        {
                            AppUserId = new Guid("a8d1173d-9a5f-4f82-8813-92e6839294a6"),
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3")
                        });
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.DiningTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("DiningTable", (string)null);
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.FoodCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("FoodCategory", (string)null);
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.FoodItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FoodCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FoodItemStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Price")
                        .HasPrecision(17, 2)
                        .HasColumnType("decimal(17,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("FoodCategoryId");

                    b.HasIndex("FoodItemStatusId");

                    b.ToTable("FoodItem", (string)null);
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.FoodItemStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("FoodItemStatus", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("7377974e-3629-4990-98b6-c5a2faf5e9b6"),
                            Code = "Ready",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "Ready"
                        },
                        new
                        {
                            Id = new Guid("fb7c7af4-d568-41c4-b7b5-f3575eb411dc"),
                            Code = "NotReady",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "NotReady"
                        });
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("BillAmount")
                        .HasPrecision(17, 2)
                        .HasColumnType("decimal(17,2)");

                    b.Property<Guid?>("CashierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CashierNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ChefId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DiningTableId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Tax")
                        .HasPrecision(17, 2)
                        .HasColumnType("decimal(17,2)");

                    b.Property<decimal>("TotalPrice")
                        .HasPrecision(17, 2)
                        .HasColumnType("decimal(17,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("WaiterId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CashierId");

                    b.HasIndex("ChefId");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("DiningTableId");

                    b.HasIndex("OrderStatusId");

                    b.HasIndex("WaiterId");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.OrderDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FoodItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasPrecision(17, 2)
                        .HasColumnType("decimal(17,2)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FoodItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetail", (string)null);
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.OrderStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("OrderStatus", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("f531adc8-62f3-4f91-837f-ab99072a7f21"),
                            Code = "Draft",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "Draft"
                        },
                        new
                        {
                            Id = new Guid("462cb6aa-e23b-4283-8f67-c502114541be"),
                            Code = "Requested",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "Requested"
                        },
                        new
                        {
                            Id = new Guid("94450abd-0093-49ac-bf44-95cd9c017406"),
                            Code = "Cooking",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "Cooking"
                        },
                        new
                        {
                            Id = new Guid("affb5a4e-bd68-4082-8afd-f2702f9568bf"),
                            Code = "Ready",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "Ready"
                        },
                        new
                        {
                            Id = new Guid("ebc2f25b-abc8-47b7-8de3-5665738bfbee"),
                            Code = "Delivered",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "Delivered"
                        },
                        new
                        {
                            Id = new Guid("ef106a12-7088-4992-bcd3-081458c04fc6"),
                            Code = "Billed",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "Billed"
                        },
                        new
                        {
                            Id = new Guid("d66b2719-964a-4b28-8cb6-01452cfe5963"),
                            Code = "Closed",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "Closed"
                        },
                        new
                        {
                            Id = new Guid("e772e758-422c-43c8-8ea3-c391dd4b2457"),
                            Code = "Canceled",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "Canceled"
                        });
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.Privilege", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Privilege", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("2923cf19-759c-4080-82b1-faca8028360c"),
                            Code = "CreateAppUser",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "CreateAppUser"
                        },
                        new
                        {
                            Id = new Guid("ad72e9f0-5cb4-431e-b9c5-f096d2cf6fb9"),
                            Code = "ReadAppUser",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "ReadAppUser"
                        },
                        new
                        {
                            Id = new Guid("1cdf2278-4256-4642-88ec-0df5262af750"),
                            Code = "UpdateAppUser",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "UpdateAppUser"
                        },
                        new
                        {
                            Id = new Guid("3736b207-620f-4d84-860a-1fc616213dc6"),
                            Code = "DeleteAppUser",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "DeleteAppUser"
                        },
                        new
                        {
                            Id = new Guid("75326d29-9314-4efe-b668-f7086eed4551"),
                            Code = "CreateAppUserRole",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "CreateAppUserRole"
                        },
                        new
                        {
                            Id = new Guid("9a7beb21-c1b7-43d3-bc9a-dc0b4c705e8b"),
                            Code = "ReadAppUserRole",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "ReadAppUserRole"
                        },
                        new
                        {
                            Id = new Guid("c6231a2f-f75e-4afb-a65d-1dd734ab055f"),
                            Code = "UpdateAppUserRole",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "UpdateAppUserRole"
                        },
                        new
                        {
                            Id = new Guid("585992f0-4d11-4e0e-9c46-824afca13494"),
                            Code = "DeleteAppUserRole",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "DeleteAppUserRole"
                        },
                        new
                        {
                            Id = new Guid("d0105568-c630-430d-ba04-756f2f6f4337"),
                            Code = "CreateRole",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "CreateRole"
                        },
                        new
                        {
                            Id = new Guid("e89cae8f-fb40-4f88-bdd7-63c5f410afd1"),
                            Code = "ReadRole",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "ReadRole"
                        },
                        new
                        {
                            Id = new Guid("9c3ddaff-4157-4c1d-bad0-b2aac76d3c59"),
                            Code = "UpdateRole",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "UpdateRole"
                        },
                        new
                        {
                            Id = new Guid("dfd148fa-0e23-48e6-a332-aaad4633425d"),
                            Code = "DeleteRole",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "DeleteRole"
                        },
                        new
                        {
                            Id = new Guid("1e13a11d-c6e9-46b3-90aa-99aef3192f6f"),
                            Code = "CreatePrivilege",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "CreatePrivilege"
                        },
                        new
                        {
                            Id = new Guid("3282e59f-48e4-4c42-aa67-30a1071fd8c6"),
                            Code = "ReadPrivilege",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "ReadPrivilege"
                        },
                        new
                        {
                            Id = new Guid("aecf04a9-6569-44f9-9ce8-60570bdf227f"),
                            Code = "UpdatePrivilege",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "UpdatePrivilege"
                        },
                        new
                        {
                            Id = new Guid("b724cf18-f503-4c35-9978-736c8151cb99"),
                            Code = "DeletePrivilege",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "DeletePrivilege"
                        },
                        new
                        {
                            Id = new Guid("66cd272a-fa2b-48c3-afa5-ca9aa9780211"),
                            Code = "CreateRolePrivilege",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "CreateRolePrivilege"
                        },
                        new
                        {
                            Id = new Guid("6850375b-4b33-421d-8b4b-1e96a556ba33"),
                            Code = "ReadRolePrivilege",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "ReadRolePrivilege"
                        },
                        new
                        {
                            Id = new Guid("c24041c7-a974-4fb1-9f9c-1ace60fe1405"),
                            Code = "UpdateRolePrivilege",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "UpdateRolePrivilege"
                        },
                        new
                        {
                            Id = new Guid("e7812636-a67d-4b28-b9b4-116ba08c4479"),
                            Code = "DeleteRolePrivilege",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "DeleteRolePrivilege"
                        },
                        new
                        {
                            Id = new Guid("e52af567-a2c1-4e33-b8c8-9fe75f328813"),
                            Code = "CreateFoodCategory",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "CreateFoodCategory"
                        },
                        new
                        {
                            Id = new Guid("4eb330db-c9af-43e7-8bf3-12d95d211dcf"),
                            Code = "ReadFoodCategory",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "ReadFoodCategory"
                        },
                        new
                        {
                            Id = new Guid("dc277ec0-2dec-42d0-bcf0-63b13f6bdfd8"),
                            Code = "UpdateFoodCategory",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "UpdateFoodCategory"
                        },
                        new
                        {
                            Id = new Guid("c3600a39-2331-4b80-b313-df2a2b7caac2"),
                            Code = "DeleteFoodCategory",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "DeleteFoodCategory"
                        },
                        new
                        {
                            Id = new Guid("114fde07-f6bd-4e91-a889-41793a0d6818"),
                            Code = "CreateFoodItemStatus",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "CreateFoodItemStatus"
                        },
                        new
                        {
                            Id = new Guid("bafdea1d-7c77-4a6a-a80b-d17447622e37"),
                            Code = "ReadFoodItemStatus",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "ReadFoodItemStatus"
                        },
                        new
                        {
                            Id = new Guid("f243dac1-d66a-480f-bd02-229e50e79011"),
                            Code = "UpdateFoodItemStatus",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "UpdateFoodItemStatus"
                        },
                        new
                        {
                            Id = new Guid("361ddfa1-6d99-4d9d-9e25-6da34a13b553"),
                            Code = "DeleteFoodItemStatus",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "DeleteFoodItemStatus"
                        },
                        new
                        {
                            Id = new Guid("1ab1c266-19c5-4b67-8f49-fb403953a02c"),
                            Code = "CreateFoodItem",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "CreateFoodItem"
                        },
                        new
                        {
                            Id = new Guid("db77bb89-6f2d-410c-92ef-10a5f1dc4b66"),
                            Code = "ReadFoodItem",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "ReadFoodItem"
                        },
                        new
                        {
                            Id = new Guid("e2362b6d-7237-4985-8db4-e38e55e4d594"),
                            Code = "UpdateFoodItem",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "UpdateFoodItem"
                        },
                        new
                        {
                            Id = new Guid("b2cd0181-f0bb-4ecc-91d3-8884c16bd0e1"),
                            Code = "DeleteFoodItem",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "DeleteFoodItem"
                        },
                        new
                        {
                            Id = new Guid("e0401111-321a-4342-ba99-63ee0a8f2d93"),
                            Code = "CreateDiningTable",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "CreateDiningTable"
                        },
                        new
                        {
                            Id = new Guid("8df5f7c9-320d-4650-a9b5-7eb286fd5217"),
                            Code = "ReadDiningTable",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "ReadDiningTable"
                        },
                        new
                        {
                            Id = new Guid("721fe0b1-0e96-42cc-81a9-64f8fd70110a"),
                            Code = "UpdateDiningTable",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "UpdateDiningTable"
                        },
                        new
                        {
                            Id = new Guid("8ce5bc42-1c09-4880-92a9-1f4a2bfb0335"),
                            Code = "DeleteDiningTable",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "DeleteDiningTable"
                        },
                        new
                        {
                            Id = new Guid("3e3761f4-abf0-47eb-97fa-f868406514b4"),
                            Code = "CreateOrderStatus",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "CreateOrderStatus"
                        },
                        new
                        {
                            Id = new Guid("3558d898-5db5-46b2-8d12-8c98bc8dbdba"),
                            Code = "ReadOrderStatus",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "ReadOrderStatus"
                        },
                        new
                        {
                            Id = new Guid("aaf58290-5d58-4d5b-814a-389c8018eed9"),
                            Code = "UpdateOrderStatus",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "UpdateOrderStatus"
                        },
                        new
                        {
                            Id = new Guid("2b7f481f-1aa2-4a31-b9e2-3beb01714f0e"),
                            Code = "DeleteOrderStatus",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "DeleteOrderStatus"
                        },
                        new
                        {
                            Id = new Guid("68391ecb-2345-4041-8847-8149e9ab3713"),
                            Code = "CreateOrder",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "CreateOrder"
                        },
                        new
                        {
                            Id = new Guid("468af6af-3689-4ec8-b3ea-35b17d3ca385"),
                            Code = "ReadOrder",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "ReadOrder"
                        },
                        new
                        {
                            Id = new Guid("b3089260-52c1-4de7-b520-427e325480d5"),
                            Code = "UpdateOrder",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "UpdateOrder"
                        },
                        new
                        {
                            Id = new Guid("6427b81c-904e-4271-82b7-2d4cf8645914"),
                            Code = "DeleteOrder",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "DeleteOrder"
                        },
                        new
                        {
                            Id = new Guid("6e60b22c-c98a-4901-8692-40f68963473f"),
                            Code = "CookOrder",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "CookOrder"
                        },
                        new
                        {
                            Id = new Guid("96a2b8e1-0138-4bb7-bf78-a00cf401cffc"),
                            Code = "DeliveryOrder",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "DeliveryOrder"
                        },
                        new
                        {
                            Id = new Guid("3c167e42-79df-42af-8b01-14ef41e10747"),
                            Code = "CloseOrder",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "CloseOrder"
                        },
                        new
                        {
                            Id = new Guid("ca150491-4ac1-4cbe-b3f0-9ae071cd0918"),
                            Code = "CreateOrderDetail",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "CreateOrderDetail"
                        },
                        new
                        {
                            Id = new Guid("3d4fb91d-5133-4d44-8265-53adf26cd832"),
                            Code = "ReadOrderDetail",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "ReadOrderDetail"
                        },
                        new
                        {
                            Id = new Guid("c4e4f1dd-3c55-48d4-8e62-3b2869696607"),
                            Code = "UpdateOrderDetail",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "UpdateOrderDetail"
                        },
                        new
                        {
                            Id = new Guid("d0f055c8-230c-4438-b782-c80fdd8ce851"),
                            Code = "DeleteOrderDetail",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "DeleteOrderDetail"
                        },
                        new
                        {
                            Id = new Guid("329147fa-c7a3-4353-9873-b4d81700b880"),
                            Code = "ReceivePayment",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "ReceivePayment"
                        });
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Role", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            Code = "Admin",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("592a30e6-4791-4381-85d2-b40c1a0f2254"),
                            Code = "Manager",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "Manager"
                        },
                        new
                        {
                            Id = new Guid("307a115f-b6af-4956-a456-8a179d7484f8"),
                            Code = "Cashier",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "Cashier"
                        },
                        new
                        {
                            Id = new Guid("3f842bd0-edb1-4fbd-a007-ea3cb822e5bd"),
                            Code = "Chef",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "Chef"
                        },
                        new
                        {
                            Id = new Guid("86a2d0c2-caf0-47d3-aa79-a59d23619e73"),
                            Code = "Waiter",
                            CreatedAt = new DateTime(2024, 11, 2, 15, 43, 49, 979, DateTimeKind.Local).AddTicks(2339),
                            CreatedBy = "Admin",
                            Name = "Waiter"
                        });
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.RolePrivilege", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PrivilegeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RoleId", "PrivilegeId");

                    b.HasIndex("PrivilegeId");

                    b.ToTable("RolePrivilege", (string)null);

                    b.HasData(
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("2923cf19-759c-4080-82b1-faca8028360c")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("ad72e9f0-5cb4-431e-b9c5-f096d2cf6fb9")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("1cdf2278-4256-4642-88ec-0df5262af750")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("3736b207-620f-4d84-860a-1fc616213dc6")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("75326d29-9314-4efe-b668-f7086eed4551")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("9a7beb21-c1b7-43d3-bc9a-dc0b4c705e8b")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("c6231a2f-f75e-4afb-a65d-1dd734ab055f")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("585992f0-4d11-4e0e-9c46-824afca13494")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("d0105568-c630-430d-ba04-756f2f6f4337")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("e89cae8f-fb40-4f88-bdd7-63c5f410afd1")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("9c3ddaff-4157-4c1d-bad0-b2aac76d3c59")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("dfd148fa-0e23-48e6-a332-aaad4633425d")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("1e13a11d-c6e9-46b3-90aa-99aef3192f6f")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("3282e59f-48e4-4c42-aa67-30a1071fd8c6")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("aecf04a9-6569-44f9-9ce8-60570bdf227f")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("b724cf18-f503-4c35-9978-736c8151cb99")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("66cd272a-fa2b-48c3-afa5-ca9aa9780211")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("6850375b-4b33-421d-8b4b-1e96a556ba33")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("c24041c7-a974-4fb1-9f9c-1ace60fe1405")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("e7812636-a67d-4b28-b9b4-116ba08c4479")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("e52af567-a2c1-4e33-b8c8-9fe75f328813")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("4eb330db-c9af-43e7-8bf3-12d95d211dcf")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("dc277ec0-2dec-42d0-bcf0-63b13f6bdfd8")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("c3600a39-2331-4b80-b313-df2a2b7caac2")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("114fde07-f6bd-4e91-a889-41793a0d6818")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("bafdea1d-7c77-4a6a-a80b-d17447622e37")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("f243dac1-d66a-480f-bd02-229e50e79011")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("361ddfa1-6d99-4d9d-9e25-6da34a13b553")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("1ab1c266-19c5-4b67-8f49-fb403953a02c")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("db77bb89-6f2d-410c-92ef-10a5f1dc4b66")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("e2362b6d-7237-4985-8db4-e38e55e4d594")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("b2cd0181-f0bb-4ecc-91d3-8884c16bd0e1")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("e0401111-321a-4342-ba99-63ee0a8f2d93")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("8df5f7c9-320d-4650-a9b5-7eb286fd5217")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("721fe0b1-0e96-42cc-81a9-64f8fd70110a")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("8ce5bc42-1c09-4880-92a9-1f4a2bfb0335")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("3e3761f4-abf0-47eb-97fa-f868406514b4")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("3558d898-5db5-46b2-8d12-8c98bc8dbdba")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("aaf58290-5d58-4d5b-814a-389c8018eed9")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("2b7f481f-1aa2-4a31-b9e2-3beb01714f0e")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("68391ecb-2345-4041-8847-8149e9ab3713")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("468af6af-3689-4ec8-b3ea-35b17d3ca385")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("b3089260-52c1-4de7-b520-427e325480d5")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("6427b81c-904e-4271-82b7-2d4cf8645914")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("6e60b22c-c98a-4901-8692-40f68963473f")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("96a2b8e1-0138-4bb7-bf78-a00cf401cffc")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("3c167e42-79df-42af-8b01-14ef41e10747")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("ca150491-4ac1-4cbe-b3f0-9ae071cd0918")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("3d4fb91d-5133-4d44-8265-53adf26cd832")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("c4e4f1dd-3c55-48d4-8e62-3b2869696607")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("d0f055c8-230c-4438-b782-c80fdd8ce851")
                        },
                        new
                        {
                            RoleId = new Guid("155586db-3459-4f49-847d-eb211a1812f3"),
                            PrivilegeId = new Guid("329147fa-c7a3-4353-9873-b4d81700b880")
                        });
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.AppUserRole", b =>
                {
                    b.HasOne("EasyResto.Domain.Entities.AppUser", "AppUser")
                        .WithMany("AppUserRoles")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EasyResto.Domain.Entities.Role", "Role")
                        .WithMany("AppUserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.FoodItem", b =>
                {
                    b.HasOne("EasyResto.Domain.Entities.FoodCategory", "FoodCategory")
                        .WithMany("FoodItems")
                        .HasForeignKey("FoodCategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EasyResto.Domain.Entities.FoodItemStatus", "FoodItemStatus")
                        .WithMany("FoodItems")
                        .HasForeignKey("FoodItemStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FoodCategory");

                    b.Navigation("FoodItemStatus");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.Order", b =>
                {
                    b.HasOne("EasyResto.Domain.Entities.AppUser", "Cashier")
                        .WithMany("CashierOrders")
                        .HasForeignKey("CashierId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EasyResto.Domain.Entities.AppUser", "Chef")
                        .WithMany("ChefOrders")
                        .HasForeignKey("ChefId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EasyResto.Domain.Entities.DiningTable", "DiningTable")
                        .WithMany("Orders")
                        .HasForeignKey("DiningTableId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EasyResto.Domain.Entities.OrderStatus", "OrderStatus")
                        .WithMany("Orders")
                        .HasForeignKey("OrderStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EasyResto.Domain.Entities.AppUser", "Waiter")
                        .WithMany("WaiterOrders")
                        .HasForeignKey("WaiterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cashier");

                    b.Navigation("Chef");

                    b.Navigation("DiningTable");

                    b.Navigation("OrderStatus");

                    b.Navigation("Waiter");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.OrderDetail", b =>
                {
                    b.HasOne("EasyResto.Domain.Entities.FoodItem", "FoodItem")
                        .WithMany("OrderDetails")
                        .HasForeignKey("FoodItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EasyResto.Domain.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FoodItem");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.RolePrivilege", b =>
                {
                    b.HasOne("EasyResto.Domain.Entities.Privilege", "Privilege")
                        .WithMany("RolePrivileges")
                        .HasForeignKey("PrivilegeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EasyResto.Domain.Entities.Role", "Role")
                        .WithMany("RolePrivileges")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Privilege");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.AppUser", b =>
                {
                    b.Navigation("AppUserRoles");

                    b.Navigation("CashierOrders");

                    b.Navigation("ChefOrders");

                    b.Navigation("WaiterOrders");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.DiningTable", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.FoodCategory", b =>
                {
                    b.Navigation("FoodItems");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.FoodItem", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.FoodItemStatus", b =>
                {
                    b.Navigation("FoodItems");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.OrderStatus", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.Privilege", b =>
                {
                    b.Navigation("RolePrivileges");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.Role", b =>
                {
                    b.Navigation("AppUserRoles");

                    b.Navigation("RolePrivileges");
                });
#pragma warning restore 612, 618
        }
    }
}
