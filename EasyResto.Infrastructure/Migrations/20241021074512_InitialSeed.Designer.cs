// <auto-generated />
using System;
using EasyResto.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EasyResto.Infrastructure.Migrations
{
    [DbContext(typeof(EasyRestoDbContext))]
    [Migration("20241021074512_InitialSeed")]
    partial class InitialSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EasyResto.Domain.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("AppUser", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("b4834d25-fdb0-420e-9201-eefaa2d61ee5"),
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            IsActive = true,
                            Name = "Admin",
                            Password = "AQAAAAIAAYagAAAAEAWU2uDAa2OfNJScHxyH8fR9kmnLNPqBji+KFrdqR/oSeYH6AOBy4wm894/3eEQF3g==",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.AppUserRole", b =>
                {
                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AppUserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AppUserRole", (string)null);

                    b.HasData(
                        new
                        {
                            AppUserId = new Guid("b4834d25-fdb0-420e-9201-eefaa2d61ee5"),
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da")
                        });
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.DiningTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("DiningTable", (string)null);
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.FoodCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("FoodCategory", (string)null);
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.FoodItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FoodCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FoodItemStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Price")
                        .HasPrecision(17, 2)
                        .HasColumnType("decimal(17,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("FoodCategoryId");

                    b.HasIndex("FoodItemStatusId");

                    b.ToTable("FoodItem", (string)null);
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.FoodItemStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("FoodItemStatus", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("cabc0a34-4ce6-4eba-bfd1-0321538c3d7f"),
                            Code = "Ready",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "Ready"
                        },
                        new
                        {
                            Id = new Guid("548c763a-f7e4-4a22-8c25-bae275fb2c4b"),
                            Code = "NotReady",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "NotReady"
                        });
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("BillAmount")
                        .HasPrecision(17, 2)
                        .HasColumnType("decimal(17,2)");

                    b.Property<Guid?>("CashierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CashierNote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ChefId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerNote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DiningTableId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Tax")
                        .HasPrecision(17, 2)
                        .HasColumnType("decimal(17,2)");

                    b.Property<decimal>("TotalPrice")
                        .HasPrecision(17, 2)
                        .HasColumnType("decimal(17,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("WaiterId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CashierId");

                    b.HasIndex("ChefId");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("DiningTableId");

                    b.HasIndex("OrderStatusId");

                    b.HasIndex("WaiterId");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.OrderDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FoodItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasPrecision(17, 2)
                        .HasColumnType("decimal(17,2)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FoodItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetail", (string)null);
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.OrderStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("OrderStatus", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("94f5c8c5-93e1-4513-ae10-431fd28f68a8"),
                            Code = "Draft",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "Draft"
                        },
                        new
                        {
                            Id = new Guid("aeb883ff-29cf-4141-872a-19111fc2569f"),
                            Code = "Requested",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "Requested"
                        },
                        new
                        {
                            Id = new Guid("0ecf549a-5fa0-4b1c-85b4-0b9d50079ce3"),
                            Code = "Cooking",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "Cooking"
                        },
                        new
                        {
                            Id = new Guid("f94741b4-0e99-46f9-8269-ddb5402a24f0"),
                            Code = "Ready",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "Ready"
                        },
                        new
                        {
                            Id = new Guid("4dc62fd3-b3c5-4ce1-b349-11002bedf363"),
                            Code = "Delivered",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "Delivered"
                        },
                        new
                        {
                            Id = new Guid("80344bd1-fd91-4a56-9f25-cab6ef02007f"),
                            Code = "Billed",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "Billed"
                        },
                        new
                        {
                            Id = new Guid("b0e424f8-2a6f-4cbb-844e-c3938d06c33f"),
                            Code = "Closed",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "Closed"
                        },
                        new
                        {
                            Id = new Guid("070e1ba3-8eb8-40ba-a661-695b49890252"),
                            Code = "Canceled",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "Canceled"
                        });
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.Privilege", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Privilege", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("7feafffa-bf03-425f-b16e-ba0ba930eb42"),
                            Code = "CreateAppUser",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "CreateAppUser"
                        },
                        new
                        {
                            Id = new Guid("91fd1296-1de6-4343-a50c-dd12426c3c60"),
                            Code = "ReadAppUser",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "ReadAppUser"
                        },
                        new
                        {
                            Id = new Guid("1252ca85-8129-410f-bbbe-d18cd38ffc20"),
                            Code = "UpdateAppUser",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "UpdateAppUser"
                        },
                        new
                        {
                            Id = new Guid("ede1f40c-3b2d-4b7b-80bb-e4e21bd58243"),
                            Code = "DeleteAppUser",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "DeleteAppUser"
                        },
                        new
                        {
                            Id = new Guid("97e18b76-e10d-4e81-83ac-a7ade5d3f3b4"),
                            Code = "CreateAppUserRole",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "CreateAppUserRole"
                        },
                        new
                        {
                            Id = new Guid("e6d94c2c-b260-4d0c-a304-7d6939d8f5be"),
                            Code = "ReadAppUserRole",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "ReadAppUserRole"
                        },
                        new
                        {
                            Id = new Guid("92e0322c-6371-45c8-8d11-4775244a6eb7"),
                            Code = "UpdateAppUserRole",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "UpdateAppUserRole"
                        },
                        new
                        {
                            Id = new Guid("2c670fcb-5962-4645-9b98-a2a11ea9b24c"),
                            Code = "DeleteAppUserRole",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "DeleteAppUserRole"
                        },
                        new
                        {
                            Id = new Guid("0e071527-57a4-40ac-85b4-6fe8ae689f03"),
                            Code = "CreateRole",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "CreateRole"
                        },
                        new
                        {
                            Id = new Guid("cd7fea40-5954-4f09-bc6a-a94988c0d0fa"),
                            Code = "ReadRole",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "ReadRole"
                        },
                        new
                        {
                            Id = new Guid("3af8ff36-926e-46dc-8f68-42c0743147e1"),
                            Code = "UpdateRole",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "UpdateRole"
                        },
                        new
                        {
                            Id = new Guid("3e686c9d-f5ad-4293-85ad-9bdaf7f8be00"),
                            Code = "DeleteRole",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "DeleteRole"
                        },
                        new
                        {
                            Id = new Guid("6abfbbc8-f52c-4ac4-8a8d-39a2a9b699b1"),
                            Code = "CreatePrivilege",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "CreatePrivilege"
                        },
                        new
                        {
                            Id = new Guid("2b67f1c1-9706-47df-b8e2-de436ec15c96"),
                            Code = "ReadPrivilege",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "ReadPrivilege"
                        },
                        new
                        {
                            Id = new Guid("98bb84d5-b3a3-4a2a-adc1-33191972f50c"),
                            Code = "UpdatePrivilege",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "UpdatePrivilege"
                        },
                        new
                        {
                            Id = new Guid("2a04f504-ded9-4321-bf4a-6394a8d68e34"),
                            Code = "DeletePrivilege",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "DeletePrivilege"
                        },
                        new
                        {
                            Id = new Guid("6b06be71-c0fd-4f1a-8475-27d49df94885"),
                            Code = "CreateRolePrivilege",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "CreateRolePrivilege"
                        },
                        new
                        {
                            Id = new Guid("5adaa260-8fe9-47d4-bd55-899953cd17b7"),
                            Code = "ReadRolePrivilege",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "ReadRolePrivilege"
                        },
                        new
                        {
                            Id = new Guid("dd2577a6-24f4-4f93-b91c-93678dd58559"),
                            Code = "UpdateRolePrivilege",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "UpdateRolePrivilege"
                        },
                        new
                        {
                            Id = new Guid("765942b5-69f6-417b-9901-3e55cbdaf1c4"),
                            Code = "DeleteRolePrivilege",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "DeleteRolePrivilege"
                        },
                        new
                        {
                            Id = new Guid("de989a65-e12b-4458-8f8a-97b7ac374fe3"),
                            Code = "CreateFoodCategory",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "CreateFoodCategory"
                        },
                        new
                        {
                            Id = new Guid("365933ef-f682-4e7c-8e3b-2c0fed8a51bb"),
                            Code = "ReadFoodCategory",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "ReadFoodCategory"
                        },
                        new
                        {
                            Id = new Guid("30cb8b12-ffa9-44d3-a622-10ee055a7eea"),
                            Code = "UpdateFoodCategory",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "UpdateFoodCategory"
                        },
                        new
                        {
                            Id = new Guid("307d782b-4566-468d-9e6a-80076d811609"),
                            Code = "DeleteFoodCategory",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "DeleteFoodCategory"
                        },
                        new
                        {
                            Id = new Guid("c7eca966-f6d9-45c3-98c8-8f9b1f7051be"),
                            Code = "CreateFoodItemStatus",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "CreateFoodItemStatus"
                        },
                        new
                        {
                            Id = new Guid("6e9a9935-9db3-4951-8d6b-12f3618389fe"),
                            Code = "ReadFoodItemStatus",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "ReadFoodItemStatus"
                        },
                        new
                        {
                            Id = new Guid("af646771-acda-44dc-8e6f-ef0c70531659"),
                            Code = "UpdateFoodItemStatus",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "UpdateFoodItemStatus"
                        },
                        new
                        {
                            Id = new Guid("6329652f-ea64-424b-a65d-05fbccdb9e79"),
                            Code = "DeleteFoodItemStatus",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "DeleteFoodItemStatus"
                        },
                        new
                        {
                            Id = new Guid("f2dca889-a381-4e0a-8249-60c1579469c2"),
                            Code = "CreateFoodItem",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "CreateFoodItem"
                        },
                        new
                        {
                            Id = new Guid("30210652-72da-4e5f-8b17-bb789498eeed"),
                            Code = "ReadFoodItem",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "ReadFoodItem"
                        },
                        new
                        {
                            Id = new Guid("70d2b2e0-5afe-45d3-998d-ae3a03c56506"),
                            Code = "UpdateFoodItem",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "UpdateFoodItem"
                        },
                        new
                        {
                            Id = new Guid("673ed6ba-ab67-49d5-bd68-bdc53ac36f89"),
                            Code = "DeleteFoodItem",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "DeleteFoodItem"
                        },
                        new
                        {
                            Id = new Guid("6c4fc91c-af56-4b3c-bd40-cbf1298f9b86"),
                            Code = "CreateDiningTable",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "CreateDiningTable"
                        },
                        new
                        {
                            Id = new Guid("51b21093-4f59-4718-98ee-c5f6f7246bb6"),
                            Code = "ReadDiningTable",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "ReadDiningTable"
                        },
                        new
                        {
                            Id = new Guid("63080caa-640e-4d43-b8ea-4df8a8d34f9e"),
                            Code = "UpdateDiningTable",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "UpdateDiningTable"
                        },
                        new
                        {
                            Id = new Guid("0a843b50-50fe-472d-8c53-9edf0f5a72ed"),
                            Code = "DeleteDiningTable",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "DeleteDiningTable"
                        },
                        new
                        {
                            Id = new Guid("0c837a3e-9c25-4f8a-b53e-b88f88e09747"),
                            Code = "CreateOrderStatus",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "CreateOrderStatus"
                        },
                        new
                        {
                            Id = new Guid("ac04d0a3-34be-40d2-a3ce-1c2cfe9a0451"),
                            Code = "ReadOrderStatus",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "ReadOrderStatus"
                        },
                        new
                        {
                            Id = new Guid("faefbbe7-329f-4310-b35d-65cf463090db"),
                            Code = "UpdateOrderStatus",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "UpdateOrderStatus"
                        },
                        new
                        {
                            Id = new Guid("a8b7fce3-0c10-4997-b389-215fb8751379"),
                            Code = "DeleteOrderStatus",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "DeleteOrderStatus"
                        },
                        new
                        {
                            Id = new Guid("384275e8-8481-42f8-96f1-f294d5576e5b"),
                            Code = "CreateOrder",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "CreateOrder"
                        },
                        new
                        {
                            Id = new Guid("67534680-8527-4653-8109-dc38ff034066"),
                            Code = "ReadOrder",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "ReadOrder"
                        },
                        new
                        {
                            Id = new Guid("6f8b1a9f-abd9-454b-bbb7-8bf207f318d1"),
                            Code = "UpdateOrder",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "UpdateOrder"
                        },
                        new
                        {
                            Id = new Guid("71256737-da55-4613-b5a7-637b47c9ee77"),
                            Code = "DeleteOrder",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "DeleteOrder"
                        },
                        new
                        {
                            Id = new Guid("7cd2c8af-619c-4916-b771-46ca92a3f00b"),
                            Code = "CreateOrderDetail",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "CreateOrderDetail"
                        },
                        new
                        {
                            Id = new Guid("638261bc-cc9e-4a8e-b506-9cd00cf655cc"),
                            Code = "ReadOrderDetail",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "ReadOrderDetail"
                        },
                        new
                        {
                            Id = new Guid("55fe2fb0-d0e6-435a-95a2-c7a4128e348d"),
                            Code = "UpdateOrderDetail",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "UpdateOrderDetail"
                        },
                        new
                        {
                            Id = new Guid("34785b0d-55ef-4d18-9154-91dd65e49869"),
                            Code = "DeleteOrderDetail",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "DeleteOrderDetail"
                        });
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Role", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            Code = "Admin",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("d1bbe2bc-101f-40ac-981f-8d2369c70108"),
                            Code = "Manager",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "Manager"
                        },
                        new
                        {
                            Id = new Guid("044e8258-b152-41fb-9a91-d719abd202c7"),
                            Code = "Cashier",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "Cashier"
                        },
                        new
                        {
                            Id = new Guid("938bb77e-79e1-46ad-b7f6-d310d9ecae0d"),
                            Code = "Chef",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "Chef"
                        },
                        new
                        {
                            Id = new Guid("3f1fdd95-ab54-429d-8231-87157b51d0a0"),
                            Code = "Waiter",
                            CreatedAt = new DateTime(2024, 10, 21, 14, 45, 11, 439, DateTimeKind.Local).AddTicks(3848),
                            CreatedBy = "Admin",
                            Name = "Waiter"
                        });
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.RolePrivilege", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PrivilegeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RoleId", "PrivilegeId");

                    b.HasIndex("PrivilegeId");

                    b.ToTable("RolePrivilege", (string)null);

                    b.HasData(
                        new
                        {
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            PrivilegeId = new Guid("7feafffa-bf03-425f-b16e-ba0ba930eb42")
                        },
                        new
                        {
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            PrivilegeId = new Guid("91fd1296-1de6-4343-a50c-dd12426c3c60")
                        },
                        new
                        {
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            PrivilegeId = new Guid("1252ca85-8129-410f-bbbe-d18cd38ffc20")
                        },
                        new
                        {
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            PrivilegeId = new Guid("ede1f40c-3b2d-4b7b-80bb-e4e21bd58243")
                        },
                        new
                        {
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            PrivilegeId = new Guid("97e18b76-e10d-4e81-83ac-a7ade5d3f3b4")
                        },
                        new
                        {
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            PrivilegeId = new Guid("e6d94c2c-b260-4d0c-a304-7d6939d8f5be")
                        },
                        new
                        {
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            PrivilegeId = new Guid("92e0322c-6371-45c8-8d11-4775244a6eb7")
                        },
                        new
                        {
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            PrivilegeId = new Guid("2c670fcb-5962-4645-9b98-a2a11ea9b24c")
                        },
                        new
                        {
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            PrivilegeId = new Guid("0e071527-57a4-40ac-85b4-6fe8ae689f03")
                        },
                        new
                        {
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            PrivilegeId = new Guid("cd7fea40-5954-4f09-bc6a-a94988c0d0fa")
                        },
                        new
                        {
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            PrivilegeId = new Guid("3af8ff36-926e-46dc-8f68-42c0743147e1")
                        },
                        new
                        {
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            PrivilegeId = new Guid("3e686c9d-f5ad-4293-85ad-9bdaf7f8be00")
                        },
                        new
                        {
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            PrivilegeId = new Guid("6abfbbc8-f52c-4ac4-8a8d-39a2a9b699b1")
                        },
                        new
                        {
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            PrivilegeId = new Guid("2b67f1c1-9706-47df-b8e2-de436ec15c96")
                        },
                        new
                        {
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            PrivilegeId = new Guid("98bb84d5-b3a3-4a2a-adc1-33191972f50c")
                        },
                        new
                        {
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            PrivilegeId = new Guid("2a04f504-ded9-4321-bf4a-6394a8d68e34")
                        },
                        new
                        {
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            PrivilegeId = new Guid("6b06be71-c0fd-4f1a-8475-27d49df94885")
                        },
                        new
                        {
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            PrivilegeId = new Guid("5adaa260-8fe9-47d4-bd55-899953cd17b7")
                        },
                        new
                        {
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            PrivilegeId = new Guid("dd2577a6-24f4-4f93-b91c-93678dd58559")
                        },
                        new
                        {
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            PrivilegeId = new Guid("765942b5-69f6-417b-9901-3e55cbdaf1c4")
                        },
                        new
                        {
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            PrivilegeId = new Guid("de989a65-e12b-4458-8f8a-97b7ac374fe3")
                        },
                        new
                        {
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            PrivilegeId = new Guid("365933ef-f682-4e7c-8e3b-2c0fed8a51bb")
                        },
                        new
                        {
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            PrivilegeId = new Guid("30cb8b12-ffa9-44d3-a622-10ee055a7eea")
                        },
                        new
                        {
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            PrivilegeId = new Guid("307d782b-4566-468d-9e6a-80076d811609")
                        },
                        new
                        {
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            PrivilegeId = new Guid("c7eca966-f6d9-45c3-98c8-8f9b1f7051be")
                        },
                        new
                        {
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            PrivilegeId = new Guid("6e9a9935-9db3-4951-8d6b-12f3618389fe")
                        },
                        new
                        {
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            PrivilegeId = new Guid("af646771-acda-44dc-8e6f-ef0c70531659")
                        },
                        new
                        {
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            PrivilegeId = new Guid("6329652f-ea64-424b-a65d-05fbccdb9e79")
                        },
                        new
                        {
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            PrivilegeId = new Guid("f2dca889-a381-4e0a-8249-60c1579469c2")
                        },
                        new
                        {
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            PrivilegeId = new Guid("30210652-72da-4e5f-8b17-bb789498eeed")
                        },
                        new
                        {
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            PrivilegeId = new Guid("70d2b2e0-5afe-45d3-998d-ae3a03c56506")
                        },
                        new
                        {
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            PrivilegeId = new Guid("673ed6ba-ab67-49d5-bd68-bdc53ac36f89")
                        },
                        new
                        {
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            PrivilegeId = new Guid("6c4fc91c-af56-4b3c-bd40-cbf1298f9b86")
                        },
                        new
                        {
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            PrivilegeId = new Guid("51b21093-4f59-4718-98ee-c5f6f7246bb6")
                        },
                        new
                        {
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            PrivilegeId = new Guid("63080caa-640e-4d43-b8ea-4df8a8d34f9e")
                        },
                        new
                        {
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            PrivilegeId = new Guid("0a843b50-50fe-472d-8c53-9edf0f5a72ed")
                        },
                        new
                        {
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            PrivilegeId = new Guid("0c837a3e-9c25-4f8a-b53e-b88f88e09747")
                        },
                        new
                        {
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            PrivilegeId = new Guid("ac04d0a3-34be-40d2-a3ce-1c2cfe9a0451")
                        },
                        new
                        {
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            PrivilegeId = new Guid("faefbbe7-329f-4310-b35d-65cf463090db")
                        },
                        new
                        {
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            PrivilegeId = new Guid("a8b7fce3-0c10-4997-b389-215fb8751379")
                        },
                        new
                        {
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            PrivilegeId = new Guid("384275e8-8481-42f8-96f1-f294d5576e5b")
                        },
                        new
                        {
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            PrivilegeId = new Guid("67534680-8527-4653-8109-dc38ff034066")
                        },
                        new
                        {
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            PrivilegeId = new Guid("6f8b1a9f-abd9-454b-bbb7-8bf207f318d1")
                        },
                        new
                        {
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            PrivilegeId = new Guid("71256737-da55-4613-b5a7-637b47c9ee77")
                        },
                        new
                        {
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            PrivilegeId = new Guid("7cd2c8af-619c-4916-b771-46ca92a3f00b")
                        },
                        new
                        {
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            PrivilegeId = new Guid("638261bc-cc9e-4a8e-b506-9cd00cf655cc")
                        },
                        new
                        {
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            PrivilegeId = new Guid("55fe2fb0-d0e6-435a-95a2-c7a4128e348d")
                        },
                        new
                        {
                            RoleId = new Guid("59453518-e6ec-41bf-ba53-5bdb0808c0da"),
                            PrivilegeId = new Guid("34785b0d-55ef-4d18-9154-91dd65e49869")
                        });
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.AppUserRole", b =>
                {
                    b.HasOne("EasyResto.Domain.Entities.AppUser", "AppUser")
                        .WithMany("AppUserRoles")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EasyResto.Domain.Entities.Role", "Role")
                        .WithMany("AppUserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.FoodItem", b =>
                {
                    b.HasOne("EasyResto.Domain.Entities.FoodCategory", "FoodCategory")
                        .WithMany("FoodItems")
                        .HasForeignKey("FoodCategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EasyResto.Domain.Entities.FoodItemStatus", "FoodItemStatus")
                        .WithMany("FoodItems")
                        .HasForeignKey("FoodItemStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FoodCategory");

                    b.Navigation("FoodItemStatus");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.Order", b =>
                {
                    b.HasOne("EasyResto.Domain.Entities.AppUser", "Cashier")
                        .WithMany("CashierOrders")
                        .HasForeignKey("CashierId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EasyResto.Domain.Entities.AppUser", "Chef")
                        .WithMany("ChefOrders")
                        .HasForeignKey("ChefId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EasyResto.Domain.Entities.DiningTable", "DiningTable")
                        .WithMany("Orders")
                        .HasForeignKey("DiningTableId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EasyResto.Domain.Entities.OrderStatus", "OrderStatus")
                        .WithMany("Orders")
                        .HasForeignKey("OrderStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EasyResto.Domain.Entities.AppUser", "Waiter")
                        .WithMany("WaiterOrders")
                        .HasForeignKey("WaiterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cashier");

                    b.Navigation("Chef");

                    b.Navigation("DiningTable");

                    b.Navigation("OrderStatus");

                    b.Navigation("Waiter");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.OrderDetail", b =>
                {
                    b.HasOne("EasyResto.Domain.Entities.FoodItem", "FoodItem")
                        .WithMany("OrderDetails")
                        .HasForeignKey("FoodItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EasyResto.Domain.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FoodItem");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.RolePrivilege", b =>
                {
                    b.HasOne("EasyResto.Domain.Entities.Privilege", "Privilege")
                        .WithMany("RolePrivileges")
                        .HasForeignKey("PrivilegeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EasyResto.Domain.Entities.Role", "Role")
                        .WithMany("RolePrivileges")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Privilege");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.AppUser", b =>
                {
                    b.Navigation("AppUserRoles");

                    b.Navigation("CashierOrders");

                    b.Navigation("ChefOrders");

                    b.Navigation("WaiterOrders");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.DiningTable", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.FoodCategory", b =>
                {
                    b.Navigation("FoodItems");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.FoodItem", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.FoodItemStatus", b =>
                {
                    b.Navigation("FoodItems");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.OrderStatus", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.Privilege", b =>
                {
                    b.Navigation("RolePrivileges");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.Role", b =>
                {
                    b.Navigation("AppUserRoles");

                    b.Navigation("RolePrivileges");
                });
#pragma warning restore 612, 618
        }
    }
}
