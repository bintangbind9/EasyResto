// <auto-generated />
using System;
using EasyResto.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EasyResto.Infrastructure.Migrations
{
    [DbContext(typeof(EasyRestoDbContext))]
    [Migration("20241023033653_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EasyResto.Domain.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("AppUser", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("3079f683-d7b6-4b97-98a2-fe592ad6a509"),
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            IsActive = true,
                            Name = "Admin",
                            Password = "AQAAAAIAAYagAAAAECQ4QIFAO5570Ed/GbPUk2FBareVyXYc1uGln9Jlatws2iXcqNT7sJSwmO1X6Bas/Q==",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.AppUserRole", b =>
                {
                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AppUserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AppUserRole", (string)null);

                    b.HasData(
                        new
                        {
                            AppUserId = new Guid("3079f683-d7b6-4b97-98a2-fe592ad6a509"),
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487")
                        });
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.DiningTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("DiningTable", (string)null);
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.FoodCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("FoodCategory", (string)null);
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.FoodItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FoodCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FoodItemStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Price")
                        .HasPrecision(17, 2)
                        .HasColumnType("decimal(17,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("FoodCategoryId");

                    b.HasIndex("FoodItemStatusId");

                    b.ToTable("FoodItem", (string)null);
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.FoodItemStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("FoodItemStatus", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("aa4b811e-0244-4d0e-829f-a846b4f7d7a6"),
                            Code = "Ready",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "Ready"
                        },
                        new
                        {
                            Id = new Guid("8edf589a-665d-4625-8a78-88c71774eb12"),
                            Code = "NotReady",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "NotReady"
                        });
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("BillAmount")
                        .HasPrecision(17, 2)
                        .HasColumnType("decimal(17,2)");

                    b.Property<Guid?>("CashierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CashierNote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ChefId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerNote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DiningTableId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Tax")
                        .HasPrecision(17, 2)
                        .HasColumnType("decimal(17,2)");

                    b.Property<decimal>("TotalPrice")
                        .HasPrecision(17, 2)
                        .HasColumnType("decimal(17,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("WaiterId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CashierId");

                    b.HasIndex("ChefId");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("DiningTableId");

                    b.HasIndex("OrderStatusId");

                    b.HasIndex("WaiterId");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.OrderDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FoodItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasPrecision(17, 2)
                        .HasColumnType("decimal(17,2)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FoodItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetail", (string)null);
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.OrderStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("OrderStatus", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("298fc1bc-c2c2-4c82-adf1-1f54ecaab704"),
                            Code = "Draft",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "Draft"
                        },
                        new
                        {
                            Id = new Guid("b09a5bab-f1cc-4d48-ad6e-6eef967ee385"),
                            Code = "Requested",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "Requested"
                        },
                        new
                        {
                            Id = new Guid("ca0c4fee-be3f-4eb3-a6cf-a1fcf9178d37"),
                            Code = "Cooking",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "Cooking"
                        },
                        new
                        {
                            Id = new Guid("34c98e4a-d2f6-4d59-a335-ce003cc7e530"),
                            Code = "Ready",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "Ready"
                        },
                        new
                        {
                            Id = new Guid("7efe4fe2-b632-4939-8d97-c047f2081f44"),
                            Code = "Delivered",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "Delivered"
                        },
                        new
                        {
                            Id = new Guid("049b015e-4072-4255-999b-2d4de9eac527"),
                            Code = "Billed",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "Billed"
                        },
                        new
                        {
                            Id = new Guid("8437d6a8-8086-4d06-b238-94864878f63d"),
                            Code = "Closed",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "Closed"
                        },
                        new
                        {
                            Id = new Guid("ffa97289-3146-4fe8-8ec6-3fe831169fe0"),
                            Code = "Canceled",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "Canceled"
                        });
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.Privilege", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Privilege", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("d710e7f7-e95e-430a-ac3b-12e270aeeb1b"),
                            Code = "CreateAppUser",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "CreateAppUser"
                        },
                        new
                        {
                            Id = new Guid("b15eed2f-d563-4f2f-b4c9-2797b75b4370"),
                            Code = "ReadAppUser",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "ReadAppUser"
                        },
                        new
                        {
                            Id = new Guid("d8df5ad7-7dde-46a2-8775-b2b2e62f92c2"),
                            Code = "UpdateAppUser",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "UpdateAppUser"
                        },
                        new
                        {
                            Id = new Guid("2049944c-9073-440b-95e9-22a8713e52a5"),
                            Code = "DeleteAppUser",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "DeleteAppUser"
                        },
                        new
                        {
                            Id = new Guid("4e255c75-f050-414f-9221-65c78cf47dee"),
                            Code = "CreateAppUserRole",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "CreateAppUserRole"
                        },
                        new
                        {
                            Id = new Guid("2571d215-363d-472d-aae2-acd058f279ba"),
                            Code = "ReadAppUserRole",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "ReadAppUserRole"
                        },
                        new
                        {
                            Id = new Guid("0679d002-4e9d-44e6-ac72-f6cf1d25e065"),
                            Code = "UpdateAppUserRole",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "UpdateAppUserRole"
                        },
                        new
                        {
                            Id = new Guid("537de7f1-e29c-4ea6-b32f-63817556520a"),
                            Code = "DeleteAppUserRole",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "DeleteAppUserRole"
                        },
                        new
                        {
                            Id = new Guid("3515c51f-2e60-45f0-b304-ce5a1a3746ec"),
                            Code = "CreateRole",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "CreateRole"
                        },
                        new
                        {
                            Id = new Guid("d4d373de-a8cd-434b-a117-e15b8b06f46b"),
                            Code = "ReadRole",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "ReadRole"
                        },
                        new
                        {
                            Id = new Guid("d0033d57-f30c-4c85-aab5-b906725ab207"),
                            Code = "UpdateRole",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "UpdateRole"
                        },
                        new
                        {
                            Id = new Guid("b595be53-f67c-44ba-897f-6b2d3d05ab94"),
                            Code = "DeleteRole",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "DeleteRole"
                        },
                        new
                        {
                            Id = new Guid("7d1ee991-f109-4b0c-9233-65d997d20a6e"),
                            Code = "CreatePrivilege",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "CreatePrivilege"
                        },
                        new
                        {
                            Id = new Guid("a4de6b58-b8e8-4830-b920-16204cb9e736"),
                            Code = "ReadPrivilege",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "ReadPrivilege"
                        },
                        new
                        {
                            Id = new Guid("d963d27c-73f5-4e67-8a64-42be8e66edde"),
                            Code = "UpdatePrivilege",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "UpdatePrivilege"
                        },
                        new
                        {
                            Id = new Guid("8973b4b8-e80d-40ca-9419-4da95745a0f5"),
                            Code = "DeletePrivilege",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "DeletePrivilege"
                        },
                        new
                        {
                            Id = new Guid("c716c609-04de-4cf0-a7ab-7c6762fb3fcb"),
                            Code = "CreateRolePrivilege",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "CreateRolePrivilege"
                        },
                        new
                        {
                            Id = new Guid("bfc01c87-ed46-4057-a941-e2a0d92d78b7"),
                            Code = "ReadRolePrivilege",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "ReadRolePrivilege"
                        },
                        new
                        {
                            Id = new Guid("bb6939e0-81b8-4e7e-80a4-4e5a9ecdf81f"),
                            Code = "UpdateRolePrivilege",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "UpdateRolePrivilege"
                        },
                        new
                        {
                            Id = new Guid("5ad3e208-041a-46bf-b4d5-e6b087f3e744"),
                            Code = "DeleteRolePrivilege",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "DeleteRolePrivilege"
                        },
                        new
                        {
                            Id = new Guid("f7557465-0327-406d-9368-f97749b9a817"),
                            Code = "CreateFoodCategory",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "CreateFoodCategory"
                        },
                        new
                        {
                            Id = new Guid("f2ebaaa5-c0ec-428a-a4c9-e22ac93e8b31"),
                            Code = "ReadFoodCategory",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "ReadFoodCategory"
                        },
                        new
                        {
                            Id = new Guid("619abad8-6e70-496c-950b-01717b415cb8"),
                            Code = "UpdateFoodCategory",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "UpdateFoodCategory"
                        },
                        new
                        {
                            Id = new Guid("f901ddab-17ea-4d7c-a1a0-29850993bbbf"),
                            Code = "DeleteFoodCategory",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "DeleteFoodCategory"
                        },
                        new
                        {
                            Id = new Guid("87bbf8fe-cfde-4e42-a44c-69a7b234123d"),
                            Code = "CreateFoodItemStatus",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "CreateFoodItemStatus"
                        },
                        new
                        {
                            Id = new Guid("55746de5-dcad-4fca-9886-44cc4d42e5d9"),
                            Code = "ReadFoodItemStatus",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "ReadFoodItemStatus"
                        },
                        new
                        {
                            Id = new Guid("983f42b1-2d08-48cf-900e-558b36305d84"),
                            Code = "UpdateFoodItemStatus",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "UpdateFoodItemStatus"
                        },
                        new
                        {
                            Id = new Guid("4804446e-796a-4c6a-8c6c-a2584d05ac20"),
                            Code = "DeleteFoodItemStatus",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "DeleteFoodItemStatus"
                        },
                        new
                        {
                            Id = new Guid("de89c867-4c3d-4b80-bb57-520c738622fb"),
                            Code = "CreateFoodItem",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "CreateFoodItem"
                        },
                        new
                        {
                            Id = new Guid("aed01930-2411-4be4-87d9-7602e83d3238"),
                            Code = "ReadFoodItem",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "ReadFoodItem"
                        },
                        new
                        {
                            Id = new Guid("afd6a22b-3f3e-42ef-810f-8c5813211d9b"),
                            Code = "UpdateFoodItem",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "UpdateFoodItem"
                        },
                        new
                        {
                            Id = new Guid("e040c8c5-f283-4169-9ead-9244e458fbc3"),
                            Code = "DeleteFoodItem",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "DeleteFoodItem"
                        },
                        new
                        {
                            Id = new Guid("ed6a52c7-816a-4c62-95af-d9bb02001290"),
                            Code = "CreateDiningTable",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "CreateDiningTable"
                        },
                        new
                        {
                            Id = new Guid("ee99cb88-eaf1-4b14-a566-293d324ddfee"),
                            Code = "ReadDiningTable",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "ReadDiningTable"
                        },
                        new
                        {
                            Id = new Guid("45f48cbe-c78a-43d1-8d78-a574390ad4d3"),
                            Code = "UpdateDiningTable",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "UpdateDiningTable"
                        },
                        new
                        {
                            Id = new Guid("dde87dc2-b943-4a2e-adcb-4761069949fc"),
                            Code = "DeleteDiningTable",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "DeleteDiningTable"
                        },
                        new
                        {
                            Id = new Guid("383c4489-e4dd-448b-a37d-2894cff5964a"),
                            Code = "CreateOrderStatus",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "CreateOrderStatus"
                        },
                        new
                        {
                            Id = new Guid("121f05fe-3da2-4df0-872a-147e4f2c7e93"),
                            Code = "ReadOrderStatus",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "ReadOrderStatus"
                        },
                        new
                        {
                            Id = new Guid("7df546c9-bca9-42fe-a4f8-776436db2ece"),
                            Code = "UpdateOrderStatus",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "UpdateOrderStatus"
                        },
                        new
                        {
                            Id = new Guid("7398c034-28a3-4881-9c8f-ebb53eaf56d7"),
                            Code = "DeleteOrderStatus",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "DeleteOrderStatus"
                        },
                        new
                        {
                            Id = new Guid("bd2ff3bd-6ffe-4533-a0f6-eccb06eb4e5f"),
                            Code = "CreateOrder",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "CreateOrder"
                        },
                        new
                        {
                            Id = new Guid("6c90b6da-49f4-4474-9e8e-76bf41a1716e"),
                            Code = "ReadOrder",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "ReadOrder"
                        },
                        new
                        {
                            Id = new Guid("5cc661ea-f7fa-4fe4-9d95-0587e5161400"),
                            Code = "UpdateOrder",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "UpdateOrder"
                        },
                        new
                        {
                            Id = new Guid("31f0bb9c-8abd-4028-b3f7-e415c6f7371e"),
                            Code = "DeleteOrder",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "DeleteOrder"
                        },
                        new
                        {
                            Id = new Guid("39aa6148-a9c6-4ad4-b3e3-6c92ba890798"),
                            Code = "CreateOrderDetail",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "CreateOrderDetail"
                        },
                        new
                        {
                            Id = new Guid("9a5198b4-ef68-450a-bf1c-6a14c8db5a81"),
                            Code = "ReadOrderDetail",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "ReadOrderDetail"
                        },
                        new
                        {
                            Id = new Guid("5454ca03-50aa-4513-b01d-32c096610d66"),
                            Code = "UpdateOrderDetail",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "UpdateOrderDetail"
                        },
                        new
                        {
                            Id = new Guid("371fa317-b00b-403d-adef-d7c4dda135be"),
                            Code = "DeleteOrderDetail",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "DeleteOrderDetail"
                        });
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Role", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            Code = "Admin",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("86c57788-272a-4c06-8d13-f99eceb01e45"),
                            Code = "Manager",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "Manager"
                        },
                        new
                        {
                            Id = new Guid("52989699-15e2-4663-96e6-01a0811adffa"),
                            Code = "Cashier",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "Cashier"
                        },
                        new
                        {
                            Id = new Guid("5d49ae3a-765f-4ad3-a127-ddfae0708ae9"),
                            Code = "Chef",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "Chef"
                        },
                        new
                        {
                            Id = new Guid("0d7be661-df63-43c7-abaa-fc32458ccd80"),
                            Code = "Waiter",
                            CreatedAt = new DateTime(2024, 10, 23, 10, 36, 51, 997, DateTimeKind.Local).AddTicks(5688),
                            CreatedBy = "Admin",
                            Name = "Waiter"
                        });
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.RolePrivilege", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PrivilegeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RoleId", "PrivilegeId");

                    b.HasIndex("PrivilegeId");

                    b.ToTable("RolePrivilege", (string)null);

                    b.HasData(
                        new
                        {
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            PrivilegeId = new Guid("d710e7f7-e95e-430a-ac3b-12e270aeeb1b")
                        },
                        new
                        {
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            PrivilegeId = new Guid("b15eed2f-d563-4f2f-b4c9-2797b75b4370")
                        },
                        new
                        {
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            PrivilegeId = new Guid("d8df5ad7-7dde-46a2-8775-b2b2e62f92c2")
                        },
                        new
                        {
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            PrivilegeId = new Guid("2049944c-9073-440b-95e9-22a8713e52a5")
                        },
                        new
                        {
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            PrivilegeId = new Guid("4e255c75-f050-414f-9221-65c78cf47dee")
                        },
                        new
                        {
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            PrivilegeId = new Guid("2571d215-363d-472d-aae2-acd058f279ba")
                        },
                        new
                        {
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            PrivilegeId = new Guid("0679d002-4e9d-44e6-ac72-f6cf1d25e065")
                        },
                        new
                        {
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            PrivilegeId = new Guid("537de7f1-e29c-4ea6-b32f-63817556520a")
                        },
                        new
                        {
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            PrivilegeId = new Guid("3515c51f-2e60-45f0-b304-ce5a1a3746ec")
                        },
                        new
                        {
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            PrivilegeId = new Guid("d4d373de-a8cd-434b-a117-e15b8b06f46b")
                        },
                        new
                        {
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            PrivilegeId = new Guid("d0033d57-f30c-4c85-aab5-b906725ab207")
                        },
                        new
                        {
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            PrivilegeId = new Guid("b595be53-f67c-44ba-897f-6b2d3d05ab94")
                        },
                        new
                        {
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            PrivilegeId = new Guid("7d1ee991-f109-4b0c-9233-65d997d20a6e")
                        },
                        new
                        {
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            PrivilegeId = new Guid("a4de6b58-b8e8-4830-b920-16204cb9e736")
                        },
                        new
                        {
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            PrivilegeId = new Guid("d963d27c-73f5-4e67-8a64-42be8e66edde")
                        },
                        new
                        {
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            PrivilegeId = new Guid("8973b4b8-e80d-40ca-9419-4da95745a0f5")
                        },
                        new
                        {
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            PrivilegeId = new Guid("c716c609-04de-4cf0-a7ab-7c6762fb3fcb")
                        },
                        new
                        {
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            PrivilegeId = new Guid("bfc01c87-ed46-4057-a941-e2a0d92d78b7")
                        },
                        new
                        {
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            PrivilegeId = new Guid("bb6939e0-81b8-4e7e-80a4-4e5a9ecdf81f")
                        },
                        new
                        {
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            PrivilegeId = new Guid("5ad3e208-041a-46bf-b4d5-e6b087f3e744")
                        },
                        new
                        {
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            PrivilegeId = new Guid("f7557465-0327-406d-9368-f97749b9a817")
                        },
                        new
                        {
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            PrivilegeId = new Guid("f2ebaaa5-c0ec-428a-a4c9-e22ac93e8b31")
                        },
                        new
                        {
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            PrivilegeId = new Guid("619abad8-6e70-496c-950b-01717b415cb8")
                        },
                        new
                        {
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            PrivilegeId = new Guid("f901ddab-17ea-4d7c-a1a0-29850993bbbf")
                        },
                        new
                        {
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            PrivilegeId = new Guid("87bbf8fe-cfde-4e42-a44c-69a7b234123d")
                        },
                        new
                        {
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            PrivilegeId = new Guid("55746de5-dcad-4fca-9886-44cc4d42e5d9")
                        },
                        new
                        {
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            PrivilegeId = new Guid("983f42b1-2d08-48cf-900e-558b36305d84")
                        },
                        new
                        {
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            PrivilegeId = new Guid("4804446e-796a-4c6a-8c6c-a2584d05ac20")
                        },
                        new
                        {
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            PrivilegeId = new Guid("de89c867-4c3d-4b80-bb57-520c738622fb")
                        },
                        new
                        {
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            PrivilegeId = new Guid("aed01930-2411-4be4-87d9-7602e83d3238")
                        },
                        new
                        {
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            PrivilegeId = new Guid("afd6a22b-3f3e-42ef-810f-8c5813211d9b")
                        },
                        new
                        {
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            PrivilegeId = new Guid("e040c8c5-f283-4169-9ead-9244e458fbc3")
                        },
                        new
                        {
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            PrivilegeId = new Guid("ed6a52c7-816a-4c62-95af-d9bb02001290")
                        },
                        new
                        {
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            PrivilegeId = new Guid("ee99cb88-eaf1-4b14-a566-293d324ddfee")
                        },
                        new
                        {
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            PrivilegeId = new Guid("45f48cbe-c78a-43d1-8d78-a574390ad4d3")
                        },
                        new
                        {
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            PrivilegeId = new Guid("dde87dc2-b943-4a2e-adcb-4761069949fc")
                        },
                        new
                        {
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            PrivilegeId = new Guid("383c4489-e4dd-448b-a37d-2894cff5964a")
                        },
                        new
                        {
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            PrivilegeId = new Guid("121f05fe-3da2-4df0-872a-147e4f2c7e93")
                        },
                        new
                        {
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            PrivilegeId = new Guid("7df546c9-bca9-42fe-a4f8-776436db2ece")
                        },
                        new
                        {
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            PrivilegeId = new Guid("7398c034-28a3-4881-9c8f-ebb53eaf56d7")
                        },
                        new
                        {
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            PrivilegeId = new Guid("bd2ff3bd-6ffe-4533-a0f6-eccb06eb4e5f")
                        },
                        new
                        {
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            PrivilegeId = new Guid("6c90b6da-49f4-4474-9e8e-76bf41a1716e")
                        },
                        new
                        {
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            PrivilegeId = new Guid("5cc661ea-f7fa-4fe4-9d95-0587e5161400")
                        },
                        new
                        {
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            PrivilegeId = new Guid("31f0bb9c-8abd-4028-b3f7-e415c6f7371e")
                        },
                        new
                        {
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            PrivilegeId = new Guid("39aa6148-a9c6-4ad4-b3e3-6c92ba890798")
                        },
                        new
                        {
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            PrivilegeId = new Guid("9a5198b4-ef68-450a-bf1c-6a14c8db5a81")
                        },
                        new
                        {
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            PrivilegeId = new Guid("5454ca03-50aa-4513-b01d-32c096610d66")
                        },
                        new
                        {
                            RoleId = new Guid("0c43562f-49c6-47b3-bb27-bd48083eb487"),
                            PrivilegeId = new Guid("371fa317-b00b-403d-adef-d7c4dda135be")
                        });
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.AppUserRole", b =>
                {
                    b.HasOne("EasyResto.Domain.Entities.AppUser", "AppUser")
                        .WithMany("AppUserRoles")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EasyResto.Domain.Entities.Role", "Role")
                        .WithMany("AppUserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.FoodItem", b =>
                {
                    b.HasOne("EasyResto.Domain.Entities.FoodCategory", "FoodCategory")
                        .WithMany("FoodItems")
                        .HasForeignKey("FoodCategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EasyResto.Domain.Entities.FoodItemStatus", "FoodItemStatus")
                        .WithMany("FoodItems")
                        .HasForeignKey("FoodItemStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FoodCategory");

                    b.Navigation("FoodItemStatus");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.Order", b =>
                {
                    b.HasOne("EasyResto.Domain.Entities.AppUser", "Cashier")
                        .WithMany("CashierOrders")
                        .HasForeignKey("CashierId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EasyResto.Domain.Entities.AppUser", "Chef")
                        .WithMany("ChefOrders")
                        .HasForeignKey("ChefId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EasyResto.Domain.Entities.DiningTable", "DiningTable")
                        .WithMany("Orders")
                        .HasForeignKey("DiningTableId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EasyResto.Domain.Entities.OrderStatus", "OrderStatus")
                        .WithMany("Orders")
                        .HasForeignKey("OrderStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EasyResto.Domain.Entities.AppUser", "Waiter")
                        .WithMany("WaiterOrders")
                        .HasForeignKey("WaiterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cashier");

                    b.Navigation("Chef");

                    b.Navigation("DiningTable");

                    b.Navigation("OrderStatus");

                    b.Navigation("Waiter");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.OrderDetail", b =>
                {
                    b.HasOne("EasyResto.Domain.Entities.FoodItem", "FoodItem")
                        .WithMany("OrderDetails")
                        .HasForeignKey("FoodItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EasyResto.Domain.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FoodItem");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.RolePrivilege", b =>
                {
                    b.HasOne("EasyResto.Domain.Entities.Privilege", "Privilege")
                        .WithMany("RolePrivileges")
                        .HasForeignKey("PrivilegeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EasyResto.Domain.Entities.Role", "Role")
                        .WithMany("RolePrivileges")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Privilege");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.AppUser", b =>
                {
                    b.Navigation("AppUserRoles");

                    b.Navigation("CashierOrders");

                    b.Navigation("ChefOrders");

                    b.Navigation("WaiterOrders");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.DiningTable", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.FoodCategory", b =>
                {
                    b.Navigation("FoodItems");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.FoodItem", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.FoodItemStatus", b =>
                {
                    b.Navigation("FoodItems");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.OrderStatus", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.Privilege", b =>
                {
                    b.Navigation("RolePrivileges");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.Role", b =>
                {
                    b.Navigation("AppUserRoles");

                    b.Navigation("RolePrivileges");
                });
#pragma warning restore 612, 618
        }
    }
}
