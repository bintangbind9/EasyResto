// <auto-generated />
using System;
using EasyResto.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EasyResto.Infrastructure.Migrations
{
    [DbContext(typeof(EasyRestoDbContext))]
    [Migration("20241101183305_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EasyResto.Domain.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("AppUser", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("7d69d651-10d9-4d07-b489-40d6b61c4c70"),
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            IsActive = true,
                            Name = "Admin",
                            Password = "AQAAAAIAAYagAAAAECz/9iguuazf1BnWy13LE8f8WR2XtLW0t8zuVJehGE2nR4tzHGCMJccWKuZo0a9Pzw==",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.AppUserRole", b =>
                {
                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AppUserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AppUserRole", (string)null);

                    b.HasData(
                        new
                        {
                            AppUserId = new Guid("7d69d651-10d9-4d07-b489-40d6b61c4c70"),
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df")
                        });
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.DiningTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("DiningTable", (string)null);
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.FoodCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("FoodCategory", (string)null);
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.FoodItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FoodCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FoodItemStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Price")
                        .HasPrecision(17, 2)
                        .HasColumnType("decimal(17,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("FoodCategoryId");

                    b.HasIndex("FoodItemStatusId");

                    b.ToTable("FoodItem", (string)null);
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.FoodItemStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("FoodItemStatus", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("d80cdea6-af2a-4b08-8fa4-16b968c0a785"),
                            Code = "Ready",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "Ready"
                        },
                        new
                        {
                            Id = new Guid("9da9ce17-1337-43d9-a68b-f71e21119d50"),
                            Code = "NotReady",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "NotReady"
                        });
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("BillAmount")
                        .HasPrecision(17, 2)
                        .HasColumnType("decimal(17,2)");

                    b.Property<Guid?>("CashierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CashierNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ChefId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DiningTableId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Tax")
                        .HasPrecision(17, 2)
                        .HasColumnType("decimal(17,2)");

                    b.Property<decimal>("TotalPrice")
                        .HasPrecision(17, 2)
                        .HasColumnType("decimal(17,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("WaiterId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CashierId");

                    b.HasIndex("ChefId");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("DiningTableId");

                    b.HasIndex("OrderStatusId");

                    b.HasIndex("WaiterId");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.OrderDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FoodItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasPrecision(17, 2)
                        .HasColumnType("decimal(17,2)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FoodItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetail", (string)null);
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.OrderStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("OrderStatus", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("cafa9bf1-3ddc-45e4-96ac-0853d3238963"),
                            Code = "Draft",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "Draft"
                        },
                        new
                        {
                            Id = new Guid("e668a32f-c130-48ec-9548-de07d4b62a23"),
                            Code = "Requested",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "Requested"
                        },
                        new
                        {
                            Id = new Guid("34e5e21f-dd77-4ee9-982e-ebf420613727"),
                            Code = "Cooking",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "Cooking"
                        },
                        new
                        {
                            Id = new Guid("4b09f188-83a7-4fb1-815a-344299dfc3cd"),
                            Code = "Ready",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "Ready"
                        },
                        new
                        {
                            Id = new Guid("379d336b-83f4-46fc-8a2a-a49659e756d2"),
                            Code = "Delivered",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "Delivered"
                        },
                        new
                        {
                            Id = new Guid("86680acb-f53b-428d-94c7-87b1cc4f804a"),
                            Code = "Billed",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "Billed"
                        },
                        new
                        {
                            Id = new Guid("1cafbfaa-a940-433c-b42a-aaa4f5770165"),
                            Code = "Closed",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "Closed"
                        },
                        new
                        {
                            Id = new Guid("2d617a3f-6c5c-4d55-9c17-dcafaf893065"),
                            Code = "Canceled",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "Canceled"
                        });
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.Privilege", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Privilege", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e8ad7df4-5c98-49e5-81c1-36892be27856"),
                            Code = "CreateAppUser",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "CreateAppUser"
                        },
                        new
                        {
                            Id = new Guid("c30af59b-4203-414a-bda9-aeee492e28f2"),
                            Code = "ReadAppUser",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "ReadAppUser"
                        },
                        new
                        {
                            Id = new Guid("a4ac1506-7c54-4b12-9578-2225d34fe8c2"),
                            Code = "UpdateAppUser",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "UpdateAppUser"
                        },
                        new
                        {
                            Id = new Guid("92bd6e02-e912-4b14-b75d-482c730bd322"),
                            Code = "DeleteAppUser",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "DeleteAppUser"
                        },
                        new
                        {
                            Id = new Guid("91c8c84b-6b92-4d87-b650-3e0a042f19fb"),
                            Code = "CreateAppUserRole",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "CreateAppUserRole"
                        },
                        new
                        {
                            Id = new Guid("4792d373-c7b8-43ec-9bce-bd67155fb7b3"),
                            Code = "ReadAppUserRole",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "ReadAppUserRole"
                        },
                        new
                        {
                            Id = new Guid("e367426a-b6b7-4241-8e83-2e845a900f8c"),
                            Code = "UpdateAppUserRole",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "UpdateAppUserRole"
                        },
                        new
                        {
                            Id = new Guid("4460fc0c-fc8a-4c87-b39b-a2372d00eac5"),
                            Code = "DeleteAppUserRole",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "DeleteAppUserRole"
                        },
                        new
                        {
                            Id = new Guid("83f3b095-fd9f-450a-b07a-c369a00871d0"),
                            Code = "CreateRole",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "CreateRole"
                        },
                        new
                        {
                            Id = new Guid("ebfc81be-e8f4-4928-99d0-9706f08614ec"),
                            Code = "ReadRole",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "ReadRole"
                        },
                        new
                        {
                            Id = new Guid("d146d210-ee8e-428d-8f54-d7690d9d4235"),
                            Code = "UpdateRole",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "UpdateRole"
                        },
                        new
                        {
                            Id = new Guid("02953670-7941-4911-928b-f890fef16e89"),
                            Code = "DeleteRole",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "DeleteRole"
                        },
                        new
                        {
                            Id = new Guid("7863ef8c-ef07-41ac-b547-11c76d96b7b0"),
                            Code = "CreatePrivilege",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "CreatePrivilege"
                        },
                        new
                        {
                            Id = new Guid("07e364f8-f3dc-4db9-8e46-dabfcf365e7b"),
                            Code = "ReadPrivilege",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "ReadPrivilege"
                        },
                        new
                        {
                            Id = new Guid("e11f15eb-947b-4852-aeec-8dd2f1ed1f5f"),
                            Code = "UpdatePrivilege",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "UpdatePrivilege"
                        },
                        new
                        {
                            Id = new Guid("e13cad3e-9acc-4d98-af01-d22ebb771191"),
                            Code = "DeletePrivilege",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "DeletePrivilege"
                        },
                        new
                        {
                            Id = new Guid("eca55170-278d-4d16-9326-eae6c8682aa6"),
                            Code = "CreateRolePrivilege",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "CreateRolePrivilege"
                        },
                        new
                        {
                            Id = new Guid("f3f167c4-2265-48b1-ab38-f96508575654"),
                            Code = "ReadRolePrivilege",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "ReadRolePrivilege"
                        },
                        new
                        {
                            Id = new Guid("75c91442-f4c5-4da7-ab3a-5c2f74c4a4a1"),
                            Code = "UpdateRolePrivilege",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "UpdateRolePrivilege"
                        },
                        new
                        {
                            Id = new Guid("b1fc6295-b378-454e-9751-dff10a44ed01"),
                            Code = "DeleteRolePrivilege",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "DeleteRolePrivilege"
                        },
                        new
                        {
                            Id = new Guid("9ba3eea2-a2ee-4716-8dc6-f52d37f4bbc0"),
                            Code = "CreateFoodCategory",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "CreateFoodCategory"
                        },
                        new
                        {
                            Id = new Guid("873c6ef9-5bbf-4f2a-b513-fdccff8322d7"),
                            Code = "ReadFoodCategory",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "ReadFoodCategory"
                        },
                        new
                        {
                            Id = new Guid("7f715986-c418-43a4-a411-c18017b1987d"),
                            Code = "UpdateFoodCategory",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "UpdateFoodCategory"
                        },
                        new
                        {
                            Id = new Guid("5dd93a01-ae59-44f4-ae49-e9480343084f"),
                            Code = "DeleteFoodCategory",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "DeleteFoodCategory"
                        },
                        new
                        {
                            Id = new Guid("361878f1-ccee-4b4b-b10c-b2f341d79c18"),
                            Code = "CreateFoodItemStatus",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "CreateFoodItemStatus"
                        },
                        new
                        {
                            Id = new Guid("3ac200d9-1e17-4bf2-90e3-3ad668dc5249"),
                            Code = "ReadFoodItemStatus",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "ReadFoodItemStatus"
                        },
                        new
                        {
                            Id = new Guid("d6af02d0-38d3-46f9-8f06-d6096457a780"),
                            Code = "UpdateFoodItemStatus",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "UpdateFoodItemStatus"
                        },
                        new
                        {
                            Id = new Guid("55824a6c-de35-4369-930e-99a58aad9f63"),
                            Code = "DeleteFoodItemStatus",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "DeleteFoodItemStatus"
                        },
                        new
                        {
                            Id = new Guid("0ac62db5-80d2-4b11-bee9-9babb566855c"),
                            Code = "CreateFoodItem",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "CreateFoodItem"
                        },
                        new
                        {
                            Id = new Guid("853a30b0-240c-4338-ac84-59bcf392dfad"),
                            Code = "ReadFoodItem",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "ReadFoodItem"
                        },
                        new
                        {
                            Id = new Guid("2c420818-5a44-40e9-8a6c-029308278366"),
                            Code = "UpdateFoodItem",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "UpdateFoodItem"
                        },
                        new
                        {
                            Id = new Guid("157f4bbb-04c5-405e-b4ed-5f97f53578ca"),
                            Code = "DeleteFoodItem",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "DeleteFoodItem"
                        },
                        new
                        {
                            Id = new Guid("c558c973-14a1-4d0d-9d76-c260a178e3ca"),
                            Code = "CreateDiningTable",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "CreateDiningTable"
                        },
                        new
                        {
                            Id = new Guid("835c861c-cbd3-400b-9ede-d54ef9cd6f0f"),
                            Code = "ReadDiningTable",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "ReadDiningTable"
                        },
                        new
                        {
                            Id = new Guid("328b0151-939e-4dc6-87ad-a96202e62a73"),
                            Code = "UpdateDiningTable",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "UpdateDiningTable"
                        },
                        new
                        {
                            Id = new Guid("7a809ee4-ac17-4821-8c5f-f4c237fba876"),
                            Code = "DeleteDiningTable",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "DeleteDiningTable"
                        },
                        new
                        {
                            Id = new Guid("8f8f49a4-6982-4dbd-ad21-36a64856aaa6"),
                            Code = "CreateOrderStatus",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "CreateOrderStatus"
                        },
                        new
                        {
                            Id = new Guid("73ebf7a4-96e9-4265-89bc-883a20e465c9"),
                            Code = "ReadOrderStatus",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "ReadOrderStatus"
                        },
                        new
                        {
                            Id = new Guid("3a4755a3-4e8a-4974-8e5d-f6068ec871b5"),
                            Code = "UpdateOrderStatus",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "UpdateOrderStatus"
                        },
                        new
                        {
                            Id = new Guid("aea3ff16-19ab-45d9-979d-bcbea37eeaf4"),
                            Code = "DeleteOrderStatus",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "DeleteOrderStatus"
                        },
                        new
                        {
                            Id = new Guid("b3e5c281-3692-49e2-a8e9-e416f010f175"),
                            Code = "CreateOrder",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "CreateOrder"
                        },
                        new
                        {
                            Id = new Guid("47e6ab16-b1cc-41f0-a226-ab6a0c9f6552"),
                            Code = "ReadOrder",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "ReadOrder"
                        },
                        new
                        {
                            Id = new Guid("8adf3ce7-9dc6-485a-8f8e-31e5446a6e18"),
                            Code = "UpdateOrder",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "UpdateOrder"
                        },
                        new
                        {
                            Id = new Guid("6efa2677-722f-41f9-93fe-34970e681ae7"),
                            Code = "DeleteOrder",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "DeleteOrder"
                        },
                        new
                        {
                            Id = new Guid("e1730817-9d79-4298-bb63-207112ee2f74"),
                            Code = "CreateOrderDetail",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "CreateOrderDetail"
                        },
                        new
                        {
                            Id = new Guid("bb067833-81fe-4d7a-b1da-58e33e97f205"),
                            Code = "ReadOrderDetail",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "ReadOrderDetail"
                        },
                        new
                        {
                            Id = new Guid("97d7b14e-09c3-41a2-86e3-358938675a1f"),
                            Code = "UpdateOrderDetail",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "UpdateOrderDetail"
                        },
                        new
                        {
                            Id = new Guid("12049a9d-7665-43a2-9cae-0e56a5139ae4"),
                            Code = "DeleteOrderDetail",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "DeleteOrderDetail"
                        });
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Role", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            Code = "Admin",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("6e053b66-5275-4191-9a02-e89080a159b8"),
                            Code = "Manager",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "Manager"
                        },
                        new
                        {
                            Id = new Guid("3dc67bb8-a873-426f-9169-cbec32767a35"),
                            Code = "Cashier",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "Cashier"
                        },
                        new
                        {
                            Id = new Guid("b3f0761e-ca81-4e7a-aa4b-df1a43e2cc87"),
                            Code = "Chef",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "Chef"
                        },
                        new
                        {
                            Id = new Guid("72a035a0-11c0-49c0-8722-751c26a9312d"),
                            Code = "Waiter",
                            CreatedAt = new DateTime(2024, 11, 2, 1, 33, 5, 244, DateTimeKind.Local).AddTicks(8660),
                            CreatedBy = "Admin",
                            Name = "Waiter"
                        });
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.RolePrivilege", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PrivilegeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RoleId", "PrivilegeId");

                    b.HasIndex("PrivilegeId");

                    b.ToTable("RolePrivilege", (string)null);

                    b.HasData(
                        new
                        {
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            PrivilegeId = new Guid("e8ad7df4-5c98-49e5-81c1-36892be27856")
                        },
                        new
                        {
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            PrivilegeId = new Guid("c30af59b-4203-414a-bda9-aeee492e28f2")
                        },
                        new
                        {
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            PrivilegeId = new Guid("a4ac1506-7c54-4b12-9578-2225d34fe8c2")
                        },
                        new
                        {
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            PrivilegeId = new Guid("92bd6e02-e912-4b14-b75d-482c730bd322")
                        },
                        new
                        {
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            PrivilegeId = new Guid("91c8c84b-6b92-4d87-b650-3e0a042f19fb")
                        },
                        new
                        {
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            PrivilegeId = new Guid("4792d373-c7b8-43ec-9bce-bd67155fb7b3")
                        },
                        new
                        {
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            PrivilegeId = new Guid("e367426a-b6b7-4241-8e83-2e845a900f8c")
                        },
                        new
                        {
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            PrivilegeId = new Guid("4460fc0c-fc8a-4c87-b39b-a2372d00eac5")
                        },
                        new
                        {
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            PrivilegeId = new Guid("83f3b095-fd9f-450a-b07a-c369a00871d0")
                        },
                        new
                        {
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            PrivilegeId = new Guid("ebfc81be-e8f4-4928-99d0-9706f08614ec")
                        },
                        new
                        {
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            PrivilegeId = new Guid("d146d210-ee8e-428d-8f54-d7690d9d4235")
                        },
                        new
                        {
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            PrivilegeId = new Guid("02953670-7941-4911-928b-f890fef16e89")
                        },
                        new
                        {
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            PrivilegeId = new Guid("7863ef8c-ef07-41ac-b547-11c76d96b7b0")
                        },
                        new
                        {
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            PrivilegeId = new Guid("07e364f8-f3dc-4db9-8e46-dabfcf365e7b")
                        },
                        new
                        {
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            PrivilegeId = new Guid("e11f15eb-947b-4852-aeec-8dd2f1ed1f5f")
                        },
                        new
                        {
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            PrivilegeId = new Guid("e13cad3e-9acc-4d98-af01-d22ebb771191")
                        },
                        new
                        {
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            PrivilegeId = new Guid("eca55170-278d-4d16-9326-eae6c8682aa6")
                        },
                        new
                        {
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            PrivilegeId = new Guid("f3f167c4-2265-48b1-ab38-f96508575654")
                        },
                        new
                        {
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            PrivilegeId = new Guid("75c91442-f4c5-4da7-ab3a-5c2f74c4a4a1")
                        },
                        new
                        {
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            PrivilegeId = new Guid("b1fc6295-b378-454e-9751-dff10a44ed01")
                        },
                        new
                        {
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            PrivilegeId = new Guid("9ba3eea2-a2ee-4716-8dc6-f52d37f4bbc0")
                        },
                        new
                        {
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            PrivilegeId = new Guid("873c6ef9-5bbf-4f2a-b513-fdccff8322d7")
                        },
                        new
                        {
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            PrivilegeId = new Guid("7f715986-c418-43a4-a411-c18017b1987d")
                        },
                        new
                        {
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            PrivilegeId = new Guid("5dd93a01-ae59-44f4-ae49-e9480343084f")
                        },
                        new
                        {
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            PrivilegeId = new Guid("361878f1-ccee-4b4b-b10c-b2f341d79c18")
                        },
                        new
                        {
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            PrivilegeId = new Guid("3ac200d9-1e17-4bf2-90e3-3ad668dc5249")
                        },
                        new
                        {
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            PrivilegeId = new Guid("d6af02d0-38d3-46f9-8f06-d6096457a780")
                        },
                        new
                        {
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            PrivilegeId = new Guid("55824a6c-de35-4369-930e-99a58aad9f63")
                        },
                        new
                        {
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            PrivilegeId = new Guid("0ac62db5-80d2-4b11-bee9-9babb566855c")
                        },
                        new
                        {
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            PrivilegeId = new Guid("853a30b0-240c-4338-ac84-59bcf392dfad")
                        },
                        new
                        {
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            PrivilegeId = new Guid("2c420818-5a44-40e9-8a6c-029308278366")
                        },
                        new
                        {
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            PrivilegeId = new Guid("157f4bbb-04c5-405e-b4ed-5f97f53578ca")
                        },
                        new
                        {
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            PrivilegeId = new Guid("c558c973-14a1-4d0d-9d76-c260a178e3ca")
                        },
                        new
                        {
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            PrivilegeId = new Guid("835c861c-cbd3-400b-9ede-d54ef9cd6f0f")
                        },
                        new
                        {
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            PrivilegeId = new Guid("328b0151-939e-4dc6-87ad-a96202e62a73")
                        },
                        new
                        {
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            PrivilegeId = new Guid("7a809ee4-ac17-4821-8c5f-f4c237fba876")
                        },
                        new
                        {
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            PrivilegeId = new Guid("8f8f49a4-6982-4dbd-ad21-36a64856aaa6")
                        },
                        new
                        {
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            PrivilegeId = new Guid("73ebf7a4-96e9-4265-89bc-883a20e465c9")
                        },
                        new
                        {
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            PrivilegeId = new Guid("3a4755a3-4e8a-4974-8e5d-f6068ec871b5")
                        },
                        new
                        {
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            PrivilegeId = new Guid("aea3ff16-19ab-45d9-979d-bcbea37eeaf4")
                        },
                        new
                        {
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            PrivilegeId = new Guid("b3e5c281-3692-49e2-a8e9-e416f010f175")
                        },
                        new
                        {
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            PrivilegeId = new Guid("47e6ab16-b1cc-41f0-a226-ab6a0c9f6552")
                        },
                        new
                        {
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            PrivilegeId = new Guid("8adf3ce7-9dc6-485a-8f8e-31e5446a6e18")
                        },
                        new
                        {
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            PrivilegeId = new Guid("6efa2677-722f-41f9-93fe-34970e681ae7")
                        },
                        new
                        {
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            PrivilegeId = new Guid("e1730817-9d79-4298-bb63-207112ee2f74")
                        },
                        new
                        {
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            PrivilegeId = new Guid("bb067833-81fe-4d7a-b1da-58e33e97f205")
                        },
                        new
                        {
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            PrivilegeId = new Guid("97d7b14e-09c3-41a2-86e3-358938675a1f")
                        },
                        new
                        {
                            RoleId = new Guid("e127c09f-c9eb-4a10-89cf-669462a7a2df"),
                            PrivilegeId = new Guid("12049a9d-7665-43a2-9cae-0e56a5139ae4")
                        });
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.AppUserRole", b =>
                {
                    b.HasOne("EasyResto.Domain.Entities.AppUser", "AppUser")
                        .WithMany("AppUserRoles")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EasyResto.Domain.Entities.Role", "Role")
                        .WithMany("AppUserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.FoodItem", b =>
                {
                    b.HasOne("EasyResto.Domain.Entities.FoodCategory", "FoodCategory")
                        .WithMany("FoodItems")
                        .HasForeignKey("FoodCategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EasyResto.Domain.Entities.FoodItemStatus", "FoodItemStatus")
                        .WithMany("FoodItems")
                        .HasForeignKey("FoodItemStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FoodCategory");

                    b.Navigation("FoodItemStatus");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.Order", b =>
                {
                    b.HasOne("EasyResto.Domain.Entities.AppUser", "Cashier")
                        .WithMany("CashierOrders")
                        .HasForeignKey("CashierId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EasyResto.Domain.Entities.AppUser", "Chef")
                        .WithMany("ChefOrders")
                        .HasForeignKey("ChefId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EasyResto.Domain.Entities.DiningTable", "DiningTable")
                        .WithMany("Orders")
                        .HasForeignKey("DiningTableId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EasyResto.Domain.Entities.OrderStatus", "OrderStatus")
                        .WithMany("Orders")
                        .HasForeignKey("OrderStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EasyResto.Domain.Entities.AppUser", "Waiter")
                        .WithMany("WaiterOrders")
                        .HasForeignKey("WaiterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cashier");

                    b.Navigation("Chef");

                    b.Navigation("DiningTable");

                    b.Navigation("OrderStatus");

                    b.Navigation("Waiter");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.OrderDetail", b =>
                {
                    b.HasOne("EasyResto.Domain.Entities.FoodItem", "FoodItem")
                        .WithMany("OrderDetails")
                        .HasForeignKey("FoodItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EasyResto.Domain.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FoodItem");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.RolePrivilege", b =>
                {
                    b.HasOne("EasyResto.Domain.Entities.Privilege", "Privilege")
                        .WithMany("RolePrivileges")
                        .HasForeignKey("PrivilegeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EasyResto.Domain.Entities.Role", "Role")
                        .WithMany("RolePrivileges")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Privilege");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.AppUser", b =>
                {
                    b.Navigation("AppUserRoles");

                    b.Navigation("CashierOrders");

                    b.Navigation("ChefOrders");

                    b.Navigation("WaiterOrders");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.DiningTable", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.FoodCategory", b =>
                {
                    b.Navigation("FoodItems");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.FoodItem", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.FoodItemStatus", b =>
                {
                    b.Navigation("FoodItems");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.OrderStatus", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.Privilege", b =>
                {
                    b.Navigation("RolePrivileges");
                });

            modelBuilder.Entity("EasyResto.Domain.Entities.Role", b =>
                {
                    b.Navigation("AppUserRoles");

                    b.Navigation("RolePrivileges");
                });
#pragma warning restore 612, 618
        }
    }
}
